<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.atb.context</groupId>
    <artifactId>parent</artifactId>
    <version>2.0.0</version>

    <packaging>pom</packaging>

    <name>ATB Context Parent</name>

    <inceptionYear>2015</inceptionYear>

    <url>https://www.atb-bremen.de</url>

    <organization>
        <name>ATB – Institut für angewandte Systemtechnik Bremen GmbH</name>
        <url>https://www.atb-bremen.de</url>
    </organization>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
    </properties>

    <repositories>
        <repository>
            <id>jenabean</id>
            <name>jenabean</name>
            <url>http://jenabean.googlecode.com/svn/trunk/repo</url>
        </repository>
        <repository>
            <id>JBoss-Releases</id>
            <name>JBoss Releases Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.6</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>11</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <!--license to use for the project-->
                        <licenseName>epl_only_v2</licenseName>

                        <!--generate license file even if it exists-->
                        <force>true</force>

                        <!--specifies the folders to consider for header replacement-->
                        <roots>
                            <root>src/main/java</root>
                            <root>src/main/resources</root>
                        </roots>

                        <extraExtensions>
                            <yml>properties</yml>
                            <yaml>properties</yaml>
                        </extraExtensions>

                        <excludes>
                            <!--do not add license header to json files because json standard does not allow comments-->
                            <exclude>**/*.json</exclude>
                        </excludes>

                        <!--exclude test-scoped dependencies from the 3rd party license-list-->
                        <excludedScopes>test</excludedScopes>

                        <!--suppress the "No file to scan" warning-->
                        <ignoreNoFileToScan>true</ignoreNoFileToScan>

                        <!--automatically update the project name or description-->
                        <canUpdateDescription>true</canUpdateDescription>

                        <!--whether the missing file should be used-->
                        <useMissingFile>true</useMissingFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>license-management</id>
                            <phase>process-resources</phase>
                            <goals>
                                <!--updates the source's headers according to the specified license-->
                                <goal>update-file-header</goal>

                                <!--Adds the full-blown license file to the final product-->
                                <goal>update-project-license</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>${java.version}</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <sourceDirectory>src/main</sourceDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <!--test-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>context-core</module>
        <module>context-monitoring</module>
    </modules>

</project>
